// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        

model Book {
  bookId          String         @id @default(uuid()) // Unique UUID for each book
  title           String
  genre           String
  publishedYear   Int
  totalCopies     Int
  availableCopies Int
  borrowRecords   BorrowRecord[] // One-to-many relationship with BorrowRecord
}

model Member {
  memberId       String         @id @default(uuid()) // Unique UUID for each member
  name           String
  email          String         @unique
  phone          String
  membershipDate DateTime       @default(now())
  borrowRecords  BorrowRecord[] // One-to-many relationship with BorrowRecord
}

model BorrowRecord {
  id         String    @id @default(uuid()) // Unique UUID for each borrow record
  borrowDate DateTime  @default(now())
  returnDate DateTime? // Nullable, only filled when the book is returned
  bookId     String
  memberId   String

  // Relationships
  book   Book   @relation(fields: [bookId], references: [bookId])
  member Member @relation(fields: [memberId], references: [memberId])
}
